{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerRegistryName": {
      "type": "string",
      "defaultValue": "[format('reg{0}', resourceGroup().name)]",
      "metadata": {
        "description": "Specifies the name of the container registry."
      }
    },
    "containerAppLogAnalyticsName": {
      "type": "string",
      "defaultValue": "[format('log-{0}', resourceGroup().name)]",
      "metadata": {
        "description": "Specifies the name of the log analytics workspace."
      }
    },
    "containerAppEnvName": {
      "type": "string",
      "defaultValue": "[format('env-{0}', resourceGroup().name)]",
      "metadata": {
        "description": "Specifies the name of the container app environment."
      }
    },
    "containerAppName": {
      "type": "string",
      "defaultValue": "[format('app-{0}', resourceGroup().name)]",
      "metadata": {
        "description": "Specifies the name of the container app."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
    "containerImage": {
      "type": "string",
      "defaultValue": "[concat(concat(parameters('containerRegistryName'), '.azurecr.io/',parameters('containerRegistryName') ,':v1'))]",
      "metadata": {
        "description": "Specifies the docker container image to deploy."
      }
    },
    "targetPort": {
      "type": "int",
      "defaultValue": 8080,
      "metadata": {
        "description": "Specifies the container port."
      }
    },
    "cpuCore": {
      "type": "string",
      "defaultValue": "0.5",
      "allowedValues": [
        "0.25",
        "0.5",
        "0.75",
        "1",
        "1.25",
        "1.5",
        "1.75",
        "2"
      ],
      "metadata": {
        "description": "Number of CPU cores the container can use. Can be with a maximum of two decimals."
      }
    },
    "memorySize": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0.5",
        "1",
        "1.5",
        "2",
        "3",
        "3.5",
        "4"
      ],
      "metadata": {
        "description": "Amount of memory (in gigabytes, GiB) allocated to the container up to 4GiB. Can be with a maximum of two decimals. Ratio with CPU cores must be equal to 2."
      }
    },
    "minReplicas": {
      "type": "int",
      "defaultValue": 1,
      "maxValue": 25,
      "minValue": 0,
      "metadata": {
        "description": "Minimum number of replicas that will be deployed"
      }
    },
    "maxReplicas": {
      "type": "int",
      "defaultValue": 3,
      "maxValue": 25,
      "minValue": 0,
      "metadata": {
        "description": "Maximum number of replicas that will be deployed"
      }
    },
    "userAssignedManagedIdentityName": {
      "type": "string",
      "defaultValue": "[format('mi-{0}', resourceGroup().name)]",
      "metadata": {
        "description": "Specifies the name of the user assigned managed identity."
      }
    },
    "containerRegistryPassword": {
      "type": "string",
      "defaultValue": "container-registry-password",
      "metadata": {
        "description": "Specifies the name of the secret."
      }
    }
  },
  "variables": {
    "const_ownerRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
    "const_scriptUrl": "https://raw.githubusercontent.com/hui1110/Java-ACA-Demo/main/test-resources/",
    "const_scriptBuildImage": "build-container-registry-image.sh",
    "const_buildImage": "build-image-to-container-registry",
    "ref_identityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedManagedIdentityName'))]",
    "name_roleAssignmentName": "[guid(format('{0}{1}Role assignment in group{0}', resourceGroup().name, variables('ref_identityId')))]",
    "roleAssignmentName": "[concat(parameters('containerRegistryName'), '/Microsoft.Authorization/', guid(concat(resourceGroup().id), variables('const_ownerRole')))]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[parameters('userAssignedManagedIdentityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[variables('name_roleAssignmentName')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedManagedIdentityName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('const_ownerRole')]",
        "principalId": "[reference(variables('ref_identityId')).principalId]",
        "principalType": "ServicePrincipal",
        "scope": "[resourceGroup().id]"
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "name": "[parameters('containerRegistryName')]",
      "apiVersion": "2022-12-01",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedManagedIdentityName')))]": {}
        }
      },
      "sku": {
        "name": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('name_roleAssignmentName'))]"
      ],
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "[variables('const_buildImage')]",
      "location": "[parameters('location')]",
      "kind": "AzureCLI",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedManagedIdentityName')))]": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]"
      ],
      "properties": {
        "AzCliVersion": "2.41.0",
        "primaryScriptUri": "[uri(variables('const_scriptUrl'), variables('const_scriptBuildImage'))]",
        "environmentVariables": [
          {
            "name": "ACR_NAME",
            "value": "[parameters('containerRegistryName')]"
          }
        ],
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('containerAppLogAnalyticsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deploymentScripts', variables('const_buildImage'))]"
      ]
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2022-10-01",
      "name": "[parameters('containerAppEnvName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Consumption"
      },
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName'))).customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName')), '2022-10-01').primarySharedKey]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-10-01",
      "name": "[parameters('containerAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedManagedIdentityName')))]": {}
        }
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvName'))]",
        "configuration": {
          "secrets": [
            {
              "name": "[parameters('containerRegistryPassword')]",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2022-12-01').passwords[1].value]"
            }
          ],
          "activeRevisionsMode": "Single",
          "ingress": {
            "external": true,
            "targetPort": "[parameters('targetPort')]",
            "allowInsecure": false,
            "transport": "Auto",
            "traffic": [
              {
                "latestRevision": true,
                "weight": 100
              }
            ]
          },
          "registries": [
            {
              "server": "[concat(parameters('containerRegistryName'), '.azurecr.io')]",
              "username": "[parameters('containerRegistryName')]",
              "PasswordSecretRef": "[parameters('containerRegistryPassword')]"
            }
          ]
        },
        "template": {
          "revisionSuffix": "revision",
          "containers": [
            {
              "name": "[parameters('containerAppName')]",
              "image": "[parameters('containerImage')]",
              "resources": {
                "cpu": "[json(parameters('cpuCore'))]",
                "memory": "[format('{0}Gi', parameters('memorySize'))]"
              }
            }
          ],
          "scale": {
            "minReplicas": "[parameters('minReplicas')]",
            "maxReplicas": "[parameters('maxReplicas')]",
            "rules": [
              {
                "name": "http-scale-rule",
                "http": {
                  "metadata": {
                    "concurrentRequests": "100"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvName'))]"
      ]
    }
  ],
  "outputs": {
    "containerAppFQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName')), '2022-10-01').latestRevisionFqdn]"
    }
  }
}
